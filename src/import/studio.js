const StudioStruct = require("structron");

/**
 * Structures based on /src/public/studio.h
 */

const MAX_NUM_LODS = 8;
const MAX_NUM_BONES_PER_VERT = 3;

const Vector = new StudioStruct()
  .addMember(StudioStruct.TYPES.FLOAT, "x")
  .addMember(StudioStruct.TYPES.FLOAT, "y")
  .addMember(StudioStruct.TYPES.FLOAT, "z");

const Vector2 = new StudioStruct()
  .addMember(StudioStruct.TYPES.FLOAT, "x")
  .addMember(StudioStruct.TYPES.FLOAT, "y");

const Quaternion = new StudioStruct()
  .addMember(StudioStruct.TYPES.FLOAT, "x")
  .addMember(StudioStruct.TYPES.FLOAT, "y")
  .addMember(StudioStruct.TYPES.FLOAT, "z")
  .addMember(StudioStruct.TYPES.FLOAT, "w");

const matrix3x4_t = new StudioStruct()
  .addMember(Vector, "col0")
  .addMember(Vector, "col1")
  .addMember(Vector, "col2")
  .addMember(Vector, "col3")

const mstudiotexture_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "name_offset")
  .addMember(StudioStruct.TYPES.INT, "flags")
  .addMember(StudioStruct.TYPES.INT, "used")
  .addMember(StudioStruct.TYPES.INT, "unused")
  .addMember(StudioStruct.TYPES.INT, "material")
  .addMember(StudioStruct.TYPES.INT, "client_material")
  .addMember(StudioStruct.TYPES.SKIP(40), "unused2")
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "name", "name_offset", true);

const mstudioboneweight_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.FLOAT, "weight0")
  .addMember(StudioStruct.TYPES.FLOAT, "weight1")
  .addMember(StudioStruct.TYPES.FLOAT, "weight2")
  .addMember(StudioStruct.TYPES.CHAR, "BONE0")
  .addMember(StudioStruct.TYPES.CHAR, "BONE1")
  .addMember(StudioStruct.TYPES.CHAR, "BONE2")
  .addMember(StudioStruct.TYPES.CHAR, "numbones")

const mstudiovertex_t = new StudioStruct()
  .addMember(mstudioboneweight_t, "m_BoneWeights")
  .addMember(Vector, "m_vecPosition")
  .addMember(Vector, "m_vecNormal")
  .addMember(Vector2, "m_vecTexCoord")

const mstudio_meshvertexdata_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "modelvertexdata")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes0")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes1")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes2")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes3")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes4")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes5")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes6")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes7");

const mstudiomesh_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "material")
  .addMember(StudioStruct.TYPES.INT, "modelindex")
  .addMember(StudioStruct.TYPES.INT, "numvertices")
  .addMember(StudioStruct.TYPES.INT, "vertexoffset")
  .addMember(StudioStruct.TYPES.INT, "numflexes")
  .addMember(StudioStruct.TYPES.INT, "flexindex")
  .addMember(StudioStruct.TYPES.INT, "materialtype")
  .addMember(StudioStruct.TYPES.INT, "materialparam")
  .addMember(StudioStruct.TYPES.INT, "meshid")
  .addMember(Vector, "center")
  .addMember(mstudio_meshvertexdata_t, "vertexdata")
  .addMember(StudioStruct.TYPES.SKIP(32), "unused");

// Index of string array
const stringIndex = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "name_offset")
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "name", "name_offset");

const mstudio_modelvertexdata_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "pVertexData")
  .addMember(StudioStruct.TYPES.INT, "pTangentData");

const mstudiomodel_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.STRING(64), "name")
  .addMember(StudioStruct.TYPES.INT, "type")
  .addMember(StudioStruct.TYPES.FLOAT, "boundingradius")
  .addMember(StudioStruct.TYPES.INT, "nummeshes")
  .addMember(StudioStruct.TYPES.INT, "meshindex")
  .addMember(StudioStruct.TYPES.INT, "numvertices")
  .addMember(StudioStruct.TYPES.INT, "vertexindex")
  .addMember(StudioStruct.TYPES.INT, "tangentindex")
  .addMember(StudioStruct.TYPES.INT, "numattachments")
  .addMember(StudioStruct.TYPES.INT, "attachmentindex")
  .addMember(StudioStruct.TYPES.INT, "numeyeballs")
  .addMember(StudioStruct.TYPES.INT, "eyeballindex")
  .addMember(mstudio_modelvertexdata_t, "vertexdata")
  .addMember(StudioStruct.TYPES.SKIP(32), "unused")
  .addArray(mstudiomesh_t, "meshes", "meshindex", "nummeshes", true)

const mstudiobodyparts_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "name_offset")
  .addMember(StudioStruct.TYPES.INT, "model_number")
  .addMember(StudioStruct.TYPES.INT, "base")
  .addMember(StudioStruct.TYPES.INT, "model_index")
  .addArray(mstudiomodel_t, "models", "model_index", "model_number", true)
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "name", "name_offset", true)

const mstudiobone_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "sznameindex")
  .addMember(StudioStruct.TYPES.INT, "parent")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller0")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller1")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller2")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller3")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller4")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller5")
  .addMember(Vector, "pos")
  .addMember(Quaternion, "quat")
  .addMember(Vector, "rot")
  .addMember(Vector, "posscale")
  .addMember(Vector, "rotscale")
  .addMember(matrix3x4_t, "poseToBone")
  .addMember(Quaternion, "qAlignment")
  .addMember(StudioStruct.TYPES.INT, "flags")
  .addMember(StudioStruct.TYPES.INT, "proctype")
  .addMember(StudioStruct.TYPES.INT, "procindex")
  .addMember(StudioStruct.TYPES.INT, "physicsbone")
  .addMember(StudioStruct.TYPES.INT, "surfacepropidx")
  .addMember(StudioStruct.TYPES.INT, "contents")
  .addMember(StudioStruct.TYPES.SKIP(32), "unused")
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "name", "sznameindex", true)
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "surfaceprop", "surfacepropidx", true)

const studiohdr_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "id")
  .addMember(StudioStruct.TYPES.INT, "version")
  .addMember(StudioStruct.TYPES.INT, "checksum")
  .addMember(StudioStruct.TYPES.STRING(64), "name")
  .addMember(StudioStruct.TYPES.INT, "dataLength")
  .addMember(Vector, "eyeposition")
  .addMember(Vector, "illumposition")
  .addMember(Vector, "hull_min")
  .addMember(Vector, "hull_max")
  .addMember(Vector, "view_bbmin")
  .addMember(Vector, "view_bbmax")
  .addMember(StudioStruct.TYPES.INT, "flags")
  .addMember(StudioStruct.TYPES.INT, "bone_count")
  .addMember(StudioStruct.TYPES.INT, "bone_index")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller_count")
  .addMember(StudioStruct.TYPES.INT, "bonecontroller_offset")
  .addMember(StudioStruct.TYPES.INT, "hitbox_count")
  .addMember(StudioStruct.TYPES.INT, "hitbox_offset")
  .addMember(StudioStruct.TYPES.INT, "localanim_count")
  .addMember(StudioStruct.TYPES.INT, "localanim_offset")
  .addMember(StudioStruct.TYPES.INT, "localseq_count")
  .addMember(StudioStruct.TYPES.INT, "localseq_offset")
  .addMember(StudioStruct.TYPES.INT, "activitylistversion")
  .addMember(StudioStruct.TYPES.INT, "eventsindexed")
  .addMember(StudioStruct.TYPES.INT, "texture_count")
  .addMember(StudioStruct.TYPES.INT, "texture_offset")
  .addMember(StudioStruct.TYPES.INT, "texturedir_count")
  .addMember(StudioStruct.TYPES.INT, "texturedir_offset")
  .addMember(StudioStruct.TYPES.INT, "skinreference_count")
  .addMember(StudioStruct.TYPES.INT, "skinfamily_count")
  .addMember(StudioStruct.TYPES.INT, "skinreference_index")
  .addMember(StudioStruct.TYPES.INT, "bodypart_count")
  .addMember(StudioStruct.TYPES.INT, "bodypart_offset")
  .addMember(StudioStruct.TYPES.INT, "attachment_count")
  .addMember(StudioStruct.TYPES.INT, "attachment_offset")
  .addMember(StudioStruct.TYPES.INT, "localnode_count")
  .addMember(StudioStruct.TYPES.INT, "localnode_index")
  .addMember(StudioStruct.TYPES.INT, "localnode_name_index")
  .addMember(StudioStruct.TYPES.INT, "flexdesc_count")
  .addMember(StudioStruct.TYPES.INT, "flexdesc_index")
  .addMember(StudioStruct.TYPES.INT, "flexcontroller_count")
  .addMember(StudioStruct.TYPES.INT, "flexcontroller_index")
  .addMember(StudioStruct.TYPES.INT, "flexrules_count")
  .addMember(StudioStruct.TYPES.INT, "flexrules_index")
  .addMember(StudioStruct.TYPES.INT, "ikchain_count")
  .addMember(StudioStruct.TYPES.INT, "ikchain_index")
  .addMember(StudioStruct.TYPES.INT, "mouths_count")
  .addMember(StudioStruct.TYPES.INT, "mouths_index")
  .addMember(StudioStruct.TYPES.INT, "localposeparam_count")
  .addMember(StudioStruct.TYPES.INT, "localposeparam_offset")
  .addMember(StudioStruct.TYPES.INT, "surfaceprop_index")
  .addMember(StudioStruct.TYPES.INT, "keyvalue_index")
  .addMember(StudioStruct.TYPES.INT, "keyvalue_count")
  .addMember(StudioStruct.TYPES.INT, "ikblock_count")
  .addMember(StudioStruct.TYPES.INT, "ikblock_index")
  .addMember(StudioStruct.TYPES.FLOAT, "mass")
  .addMember(StudioStruct.TYPES.INT, "contents")
  .addMember(StudioStruct.TYPES.INT, "includemodel_count")
  .addMember(StudioStruct.TYPES.INT, "includemodel_index")
  .addMember(StudioStruct.TYPES.INT, "virtualModel")
  .addMember(StudioStruct.TYPES.INT, "animblocks_name_index")
  .addMember(StudioStruct.TYPES.INT, "animblocks_count")
  .addMember(StudioStruct.TYPES.INT, "animblocks_index")
  .addMember(StudioStruct.TYPES.INT, "animblockModel")
  .addMember(StudioStruct.TYPES.INT, "bonetable_index")
  .addMember(StudioStruct.TYPES.INT, "vertex_base")
  .addMember(StudioStruct.TYPES.INT, "offset_base")
  .addMember(StudioStruct.TYPES.BYTE, "directionaldotproduct")
  .addMember(StudioStruct.TYPES.BYTE, "rootLod")
  .addMember(StudioStruct.TYPES.BYTE, "numAllowedRootLods")
  .addMember(StudioStruct.TYPES.SKIP(5), "unused")
  .addMember(StudioStruct.TYPES.INT, "flexcontrollerui_count")
  .addMember(StudioStruct.TYPES.INT, "flexcontrollerui_index")
  .addMember(StudioStruct.TYPES.INT, "studiohdr2index")
  .addMember(StudioStruct.TYPES.INT, "unused")
  .addArray(mstudiotexture_t, "textures", "texture_offset", "texture_count")
  .addArray(stringIndex, "texturedirs", "texturedir_offset", "texturedir_count")
  .addArray(mstudiobodyparts_t, "bodyparts", "bodypart_offset", "bodypart_count")
  .addArray(mstudiobone_t, "bones", "bone_index", "bone_count")
  .addReference(StudioStruct.TYPES.NULL_TERMINATED_STRING(), "surfaceProp", "surfaceprop_index");

const vertexFileFixup_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "lod")
  .addMember(StudioStruct.TYPES.INT, "sourceVertexId")
  .addMember(StudioStruct.TYPES.INT, "numVertexes");

const vertexFileHeader_t = new StudioStruct()
  .addMember(StudioStruct.TYPES.INT, "id")
  .addMember(StudioStruct.TYPES.INT, "version")
  .addMember(StudioStruct.TYPES.INT, "checksum")
  .addMember(StudioStruct.TYPES.INT, "numLODs")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes0")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes1")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes2")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes3")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes4")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes5")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes6")
  .addMember(StudioStruct.TYPES.INT, "numLODVertexes7")
  .addMember(StudioStruct.TYPES.INT, "numFixups")
  .addMember(StudioStruct.TYPES.INT, "fixupTableStart")
  .addMember(StudioStruct.TYPES.INT, "vertexDataStart")
  .addMember(StudioStruct.TYPES.INT, "tangentDataStart")
  .addArray(vertexFileFixup_t, "fixups", "fixupTableStart", "numFixups");

module.exports = {
  studiohdr_t,
  vertexFileHeader_t,
  mstudiovertex_t
}
